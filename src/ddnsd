<?php
namespace KS\Ddnsd;

require_once __DIR__."/../vendor/autoload.php";

$cmd = new \Commando\Command();
$cmd->option('c')
    ->aka('config-dir')
    ->describedAs('The path containing ddnsd\'s configuration files');

$cmd->option("h")
    ->aka("help")
    ->boolean()
    ->describedAs("Show help screen");

$cmd->option("v")
    ->aka("version")
    ->boolean()
    ->describedAs("Echo version information and exit");

$cmd->flag("d")
    ->aka("daemonize")
    ->boolean()
    ->describedAs("Create a daemonized child process and exit");

if ($cmd['c']) {
    $confdir = $cmd['c'];
} else {
    $confdir = "/etc/ddnsd";
}

if (!is_dir($confdir)) {
    fwrite(STDERR, "Confdir $confdir not found!\n");
    exit(10);
}

$mainConf = "$confdir/config";
if (!is_file($mainConf)) {
    fwrite(STDERR, "No main config file found at $mainConf!\n");
    exit(20);
}

$conffiles = [];
if (is_dir("$confdir/config.d")) {
    $d = dir("$confdir/config.d");
    while (($file = $d->read()) !== false) {
        if (substr($d, 0, 1) === '.') {
            continue;
        }
        $conffiles[] = "$confdir/config.d/$file";
    }
}
sort($conffiles);
array_unshift($conffiles, $mainConf);


$config = new DdnsDaemonConfig($conffiles);
$ddnsd = new DdnsDaemon($config);

// If we're daemonizing, fork and exit
if ($cmd['d']) {
    $pid = pcntl_fork();
    if ($pid === -1) {
        fwrite(STDERR, "Couldn't fork to create a child process! Exiting.");
        exit(23);
    } elseif ($pid) {
        exit(0);
    } else {
        $ddnsd->run();
    }

// Otherwise, run directly
} else {
    $ddnsd->run();
}

